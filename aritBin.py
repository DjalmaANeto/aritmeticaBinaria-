#A id√©ia desse programa √© a seguinte, dar uma roubadinha e efetuar opera√ß√µes aritm√©ticas entre bin√°rios convertendo estes para decimal e depois para bin√°rio obtendo o resultado

#fun√ß√£o responsavel pela conversao dos bin√°rios para decimais
def binToDec(n):
    exp = len(n) - 1
    aux = 0
    
    # o loop percorrer√° cada casa do nosso n√∫mero bin√°rio, executando a opera√ßao de conver√ß√£o
    for x in n:
        # opera√ß√£o de convers√£o
        aux = aux + (int(x) * (2 ** exp))
        exp = exp - 1

    return aux

#precimos corrigir nosso resultado para bin√°rio novamente certo? ent√£o:

#fun√ß√£o responsavel por converter decimais em binario na parte inteira 
def decToBin(D):
    D = int(D)
    numberI = []    
    results = ""
    #opera√ß√£o de convers√£o
    while D >= 1:
        R = D % 2
        numberI.append(int(R))
        D = int(D)/2

    #depois das consecutivas divis√µes invertemos o vetor de restos (muito f√°cil inverter uma lista em python n√©?)
    numberI = numberI[::-1] 
    #tranformando a lista em string para corrigir o formato do dado    
    for x in numberI:
        results += str(x)
    
    return results

#fun√ß√£o respons√°vel pela convers√£o da parte fracionaria 
def multiplications(dec):
    numberD = []
    # no caso de uma dizima periodica sera interrompida em 6 casas
    results = ""
    x = 0
    while x <= 5:
        dec = dec * 2
        temp = dec
        numberD.append(int(temp))
        if int(dec) == 1:
            dec = dec - 1
        x = 1 + x
    
    results += "."
    for x in numberD:
        results += str(x)
    
    return results

#fun√ß√£o que checa se h√° partes fracion√°rias para ent√£o converter
def checkAndTransformBin(D):
    results = ""

    for x in list(D):
        if x == ".":
            D = float(D)
    
    if float(D) - int(D) == 0:
        D = int(D)

    if D - int(D) == 0:
        results = decToBin(D)

    else:
        dec = D - int(D)
        results = decToBin(D)
        results += multiplications(dec)
    
    return results


#cora√ß√£o da fun√ß√£o soma
def sum(n, n1):
    return checkAndTransformBin(int(binToDec(n)) + int(binToDec(n1)))
    

#cora√ß√£o da fun√ß√£o subtra√ß√£o
def sub(n, n1):
    return checkAndTransformBin(int(binToDec(n)) - int(binToDec(n1)))
    
#cora√ß√£o da fun√ß√£o divis√£o
def div(n, n1):
    return checkAndTransformBin(int(binToDec(n)) / int(binToDec(n1)))
    

#cora√ß√£o da fun√ß√£o multiplica√ß√£o
def mul(n, n1):
    return checkAndTransformBin(int(binToDec(n)) * int(binToDec(n1)))

#fun√ß√£o main(principal) responsavel pelo controlador da aplica√ß√£o
def main():
    # n = []
    # n1 = []
    results = " "
    op = " "

    print("üòÅBe welcome to binary arithmetics!üòÅ\n\tü•∞Studie is every awesome!ü•∞")

    op = input("Type:\n1 --------- sum\n2 --------- subtraction\n3 --------- division\n4 --------- multiplication\nüê±‚Äçüíª: ")

    if op == "1":
        n = input("Type your first number: ")
        n1 = input("Type your second number: ")
        results = sum(n, n1)
        print(n,"+",n1,"=",results)
    elif op == "2":
        n = input("Type your first number: ")
        n1 = input("Type your second number: ")
        results = sub(n, n1)
        print(n,"-",n1,"=",results)
    elif op == "3":
        n = input("Type your first number: ")
        n1 = input("Type your second number: ")
        results = div(n, n1)
        print(n,"/",n1,"=",results)
    elif op == "4":
        n = input("Type your first number: ")
        n1 = input("Type your second number: ")
        results = mul(n, n1)
        print(n,"*",n1,"=",results)
##########################################################################
    elif op == "666":
        op = input("1 --- DEC to BIN\n2 --- BIN to DEC\n8===D")
        if op == "1":
            n = input("üòöhey hot boy type a number to test: ")
            results = checkAndTransformBin(n)
            print("Looküòö\n",n," in bin ", results)
        elif op == "2":
            n = input("üòöhey hot boy type a number to test: ")
            results = binToDec(n)
            print("Looküòö\n",n," in dec ", results)
        else: 
            print("üò™BAKAüò™")
##########################################################################
    else:
        print("Invalid option üò™...")

    op = input('\nType 0 to leave...\nOr other character to continue...')
    if op != '0':
        main()
#startando a aplica√ß√£o, chamando a fun√ß√£o no escopo aberto (voc√™ j√° deve ter descoberto que isso n√£o precisa ser feito em C, C++ ou JAVA. A SDK destas procura a fun√ß√£o main e a executa por default)
main()
